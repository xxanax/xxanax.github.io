from telebot import types, TeleBot
import json
import gpt
import configparser

config = configparser.ConfigParser()
config.read("config.ini")

token = config['Telegram']['token']

bot = TeleBot(token, parse_mode = 'HTML')

@bot.message_handler(commands = ['start'])#–ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
def start(message):
	bot.send_chat_action(message.from_user.id, action = 'typing', timeout = 100)
	bot.send_message(message.chat.id, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µüëá', reply_markup = types.ReplyKeyboardRemove())

@bot.message_handler(commands = ['portfolio'])
def portfolio(message):
	bot.send_chat_action(message.from_user.id, action = 'typing', timeout = 100)
	mark = types.ReplyKeyboardMarkup(resize_keyboard = True)
	webAppTest = types.WebAppInfo('https://xxanax.github.io')
	mark.add(types.KeyboardButton(text = "üõ† –°–ú–û–¢–†–ï–¢–¨ –ü–û–†–¢–§–û–õ–ò–û üõ†", web_app = webAppTest))

	bot.send_message(message.chat.id, '–°–º–æ—Ç—Ä–∏—Ç–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:', reply_markup = mark)

@bot.message_handler(commands = ['random'])
def random(message):
	bot.send_chat_action(message.from_user.id, action = 'typing', timeout = 100)
	mark = types.ReplyKeyboardMarkup(resize_keyboard = True)
	webAppTest = types.WebAppInfo('https://xxanax.github.io/random')
	mark.add(types.KeyboardButton(text = "üé≤ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª üé≤", web_app = webAppTest))

	bot.send_message(message.chat.id, '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:', reply_markup = mark)

@bot.message_handler(commands = ['gpt'])
def send_gpt(message):
	bot.send_chat_action(message.from_user.id, action = 'typing', timeout = 100)
	mark = types.ReplyKeyboardMarkup(resize_keyboard = True)
	webAppTest = types.WebAppInfo('https://xxanax.github.io/gpt')
	mark.add(types.KeyboardButton(text = "üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ChatGPT üí¨", web_app = webAppTest))

	bot.send_message(message.chat.id, 'ChatGPT –≤ –≤–∏–¥–µ WebApp:', reply_markup = mark)

@bot.message_handler(content_types = "web_app_data")
def answer(webAppMes):
	data = json.loads(webAppMes.web_app_data.data)

	m = bot.send_message(webAppMes.from_user.id, f'üí¨ –í—ã: <i>{data["prompt"]}</i>')
	bot.send_chat_action(webAppMes.from_user.id, action = 'typing', timeout=60)

	answer = gpt.get_answer(data['prompt'])

	bot.edit_message_text(chat_id=m.chat.id,message_id=m.message_id,text = f'üí¨ –í—ã: <i>{data["prompt"]}</i>\n\nü§ñ ChatGPT: <i>{answer}</i>')

if __name__ == '__main__':
	bot.infinity_polling()
